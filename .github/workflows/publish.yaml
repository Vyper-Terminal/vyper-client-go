name: Go Module Release

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    test-and-publish:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: '1.22.3'

            - name: Install dependencies
              run: go mod tidy

            - name: Run tests
              run: go test -v ./...

            - name: Get latest version tag
              id: get_latest_tag
              run: |
                  latest_tag=$(git describe --tags --match "v*" --abbrev=0 2>/dev/null || echo "v0.0.0")
                  echo "Latest tag: $latest_tag"
                  echo "::set-output name=latest_tag::$latest_tag"

            - name: Calculate new version
              id: calc_new_version
              run: |
                  latest_tag="${{ steps.get_latest_tag.outputs.latest_tag }}"
                  version=${latest_tag#v}  # Remove 'v' prefix
                  IFS='.' read -r major minor patch <<< "$version"

                  if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
                    # If manually triggered, increment the minor version
                    minor=$((minor + 1))
                    patch=0
                  else
                    # Otherwise, increment the patch version
                    patch=$((patch + 1))
                  fi

                  new_version="v$major.$minor.$patch"
                  echo "New version: $new_version"
                  echo "::set-output name=new_version::$new_version"

            - name: Set Git user
              run: |
                  git config user.name "github-actions"
                  git config user.email "github-actions@github.com"

            - name: Authenticate with GitHub
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
              run: |
                  git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/Vyper-Terminal/vyper-client-go.git

            - name: Create and push tag
              run: |
                  git tag ${{ steps.calc_new_version.outputs.new_version }}
                  git push origin ${{ steps.calc_new_version.outputs.new_version }}

            - name: Verify Go Module
              run: |
                  go list -m github.com/Vyper-Terminal/vyper-client-go@${{ steps.calc_new_version.outputs.new_version }}
